
#apollo配置
apollo.bootstrap.enabled = true

#应用的名称，用于eureka注册的唯一标识
spring.application.name = test-shop
server.port = 8066

#mybatis相关配置
mybatis.mapper-locations = classpath:mappers/*.xml

#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=127.0.0.1:9092

#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=my-first-group
# 指定位移消费拉取的位置(earliest从0开始消费，默认值latest从末端开始消费，none代表不进行任何消费直接抛异常)
spring.kafka.consumer.auto-offset-reset=earliest
#手动提交位移
spring.kafka.consumer.enable-auto-commit=false
#提交位移的时间间隔100ms,默认是5000ms
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#listener
spring.kafka.listener.concurrency = 5
# 手动提交
spring.kafka.listener.ack-mode = manual_immediate

#Redis配置
spring.redis.database = 0
spring.redis.host = 127.0.0.1
spring.redis.port = 6379
spring.redis.password = 123456
spring.redis.pool.max-active = 8
spring.redis.pool.max-wait = -1
spring.redis.pool.max-idle = 8
spring.redis.pool.min-idle = 0
spring.redis.timeout = 0


#指定即将服务注册中心的地址
eureka.client.serviceUrl.defaultZone = http://localhost:8087/eureka/

#指向zipkin地址
spring.zipkin.base-url=http://localhost:9411/